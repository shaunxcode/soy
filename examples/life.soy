(define dirs {{-1 -1} {-1 0} {-1 1} {0 -1} {0 1} {1 -1} {1 0} {1 1}})

(define next-universe [universe | 
  let neighbor-sum: [x y | sum (map [m | (board (+ x m.0)) (+ y m.1)] dirs)]
      next-cell: [x y |
        let cur: ((board x) y)
            ns: (neighbor-sum x y)
            cond ((and (= cur 1) (or (< ns 2) (> ns 3))) 0)
                  ((and (= cur 0) (= ns 3)) 1)
                  (else cur)]
      row: [n out | 
        let w: (length (car universe))
            if (= (length out) w)
               out
               (row n
                    (cons (next-cell (- w (length out)) n)
                          out))]